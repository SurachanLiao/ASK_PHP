{"ast":null,"code":"import { CARD_STATUS, DECK_SIZE, CARD_SIZES } from \"../constants\";\nimport C2 from \"../assets/cards/2C.jpg\";\nimport { Image } from 'react-native';\nconst BASE_URL = \"https://picsum.photos\";\nconst LIMIT = Math.ceil(DECK_SIZE / 2);\n/**\n * Create new game\n */\n\nexport default (() => {\n  const urls = getRandomUrls();\n  const deck = urls.concat(urls);\n\n  while (deck.length > DECK_SIZE) {\n    deck.pop();\n  }\n\n  const shuffledDeck = deck.sort(() => 0.5 - Math.random()); // change this to shuffle a desk of 52 cards\n\n  return shuffledDeck;\n}); ////// change this function to generate a deck of 52 cards\n\nexport const getRandomUrls = () => {\n  // const imageUrl = `${BASE_URL}/${CARD_SIZES.width}/${CARD_SIZES.height}?random=`;\n  const imageUrl = C2;\n  const urlArray = [];\n\n  for (let index = 0; index < LIMIT; index++) {\n    urlArray.push({\n      id: index,\n      url: imageUrl,\n      // url: imageUrl + index,\n      status: CARD_STATUS.HIDDEN\n    });\n  }\n\n  return urlArray;\n};\n/**\n * Check if the game is completed\n * @param {*} deck\n */\n\nexport const checkGame = deck => {\n  const matches = Object.keys(deck).filter(key => deck[key].status === CARD_STATUS.MATCHED);\n  return matches.length === DECK_SIZE - 1;\n};","map":{"version":3,"sources":["/Users/Smile/ASK_PHP/src/services/GameService.js"],"names":["CARD_STATUS","DECK_SIZE","CARD_SIZES","C2","Image","BASE_URL","LIMIT","Math","ceil","urls","getRandomUrls","deck","concat","length","pop","shuffledDeck","sort","random","imageUrl","urlArray","index","push","id","url","status","HIDDEN","checkGame","matches","Object","keys","filter","key","MATCHED"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,cAAnD;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUP,SAAS,GAAG,CAAtB,CAAd;AAEA;;;;AAGA,gBAAe,MAAM;AACnB,QAAMQ,IAAI,GAAGC,aAAa,EAA1B;AACA,QAAMC,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAb;;AAEA,SAAOE,IAAI,CAACE,MAAL,GAAcZ,SAArB,EAAgC;AAC9BU,IAAAA,IAAI,CAACG,GAAL;AACD;;AAED,QAAMC,YAAY,GAAGJ,IAAI,CAACK,IAAL,CAAU,MAAM,MAAMT,IAAI,CAACU,MAAL,EAAtB,CAArB,CARmB,CASnB;;AACA,SAAOF,YAAP;AACD,CAXD,E,CAaA;;AACA,OAAO,MAAML,aAAa,GAAG,MAAM;AACjC;AAEA,QAAMQ,QAAQ,GAAGf,EAAjB;AACA,QAAMgB,QAAQ,GAAG,EAAjB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,KAA5B,EAAmCc,KAAK,EAAxC,EAA4C;AAC1CD,IAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,MAAAA,EAAE,EAAEF,KADQ;AAEZG,MAAAA,GAAG,EAAEL,QAFO;AAGZ;AACAM,MAAAA,MAAM,EAAExB,WAAW,CAACyB;AAJR,KAAd;AAMD;;AAED,SAAON,QAAP;AACD,CAhBM;AAkBP;;;;;AAIA,OAAO,MAAMO,SAAS,GAAGf,IAAI,IAAI;AAC/B,QAAMgB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYlB,IAAZ,EAAkBmB,MAAlB,CACdC,GAAG,IAAIpB,IAAI,CAACoB,GAAD,CAAJ,CAAUP,MAAV,KAAqBxB,WAAW,CAACgC,OAD1B,CAAhB;AAIA,SAAOL,OAAO,CAACd,MAAR,KAAmBZ,SAAS,GAAG,CAAtC;AACD,CANM","sourcesContent":["import { CARD_STATUS, DECK_SIZE, CARD_SIZES } from \"../constants\";\nimport C2 from \"../assets/cards/2C.jpg\";\nimport { Image } from 'react-native';\n\nconst BASE_URL = \"https://picsum.photos\";\nconst LIMIT = Math.ceil(DECK_SIZE / 2);\n\n/**\n * Create new game\n */\nexport default () => {\n  const urls = getRandomUrls();\n  const deck = urls.concat(urls);\n\n  while (deck.length > DECK_SIZE) {\n    deck.pop();\n  }\n\n  const shuffledDeck = deck.sort(() => 0.5 - Math.random());\n  // change this to shuffle a desk of 52 cards\n  return shuffledDeck;\n};\n\n////// change this function to generate a deck of 52 cards\nexport const getRandomUrls = () => {\n  // const imageUrl = `${BASE_URL}/${CARD_SIZES.width}/${CARD_SIZES.height}?random=`;\n\n  const imageUrl = C2;\n  const urlArray = [];\n\n  for (let index = 0; index < LIMIT; index++) {\n    urlArray.push({\n      id: index,\n      url: imageUrl,\n      // url: imageUrl + index,\n      status: CARD_STATUS.HIDDEN\n    });\n  }\n\n  return urlArray;\n};\n\n/**\n * Check if the game is completed\n * @param {*} deck\n */\nexport const checkGame = deck => {\n  const matches = Object.keys(deck).filter(\n    key => deck[key].status === CARD_STATUS.MATCHED\n  );\n\n  return matches.length === DECK_SIZE - 1;\n};\n"]},"metadata":{},"sourceType":"module"}